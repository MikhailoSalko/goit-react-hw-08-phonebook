{"version":3,"file":"static/js/284.cabf85c5.chunk.js","mappings":"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","sources":["redux/filter/filter-selectors.js","redux/contacts/contacts-selectors.js","components/StyledApp.js","components/ContactList/ContactItem/StyledContactItem.js","components/Filter/StyledFilter.js","components/ContactForm/ContactForm.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/StyledContactList.js","components/ContactList/ContactList.jsx","components/Loader/Loading.js","components/Loader/Loader.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectFilter = state => state.filter.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/filter-selectors';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectLoading = state => state.contacts.loading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(({ name }) => {\n      return name.toLowerCase().trim().includes(filter.toLowerCase().trim());\n    })\n);\n","import styled from 'styled-components';\n\nexport const StyledPhoneBookContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  font-size: 40;\n  color: #010101;\n`;\n\nexport const StyledHeader = styled.h2`\n  margin-bottom: 10px;\n  font-size: 40px;\n  color: #4d5951;\n`;\n\nexport const StyledSectionContainer = styled.div`\n  width: 250px;\n`;\n\nexport const StyledTextNoContacts = styled.p`\n  font-size: 20;\n  color: #010101;\n`;\n","import { StyledTextNoContacts } from 'components/StyledApp';\nimport styled from 'styled-components';\n\nexport const StyledItem = styled.li`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const StyledTextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const StyledText = styled(StyledTextNoContacts)`\n  font-size: 20px;\n`;\n\nexport const StyledButton = styled.button`\n  padding: 10px 15px;\n  color: #2a2a2a;\n  background-color: transparent;\n  border-radius: 5px;\n  background-color: rgba(189, 191, 255, 0.5);\n  transition: background-color 300ms ease-in-out, color 300ms ease-in-out,\n    box-shadow 300ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #e3473b;\n    color: #fff;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset,\n      rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledLabel = styled.label`\n  display: block;\n  margin-bottom: 5px;\n  font-size: 13px;\n`;\n\nexport const StyledInput = styled.input`\n  display: block;\n  width: 200px;\n  height: 30px;\n  border: 2px solid #666785;\n  border-radius: 5px;\n`;\n","import { StyledButton } from 'components/ContactList/ContactItem/StyledContactItem';\nimport { StyledLabel, StyledInput } from 'components/Filter/StyledFilter';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  margin-bottom: 10px;\n`;\n\nexport const StyledSubmitButton = styled(StyledButton)`\n  &:hover,\n  &:focus {\n    background-color: #95fc8d;\n    color: #2a2a2a;\n  }\n`;\n\nexport const StyledFormInput = styled(StyledInput)`\n  margin-bottom: 20px;\n`;\n\nexport const StyledFomrLabel = styled(StyledLabel)`\n  margin-bottom: 10px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/contacts-selectors';\nimport Notiflix, { Notify } from 'notiflix';\nimport { addContact } from '../../redux/contacts/contactsThunks';\nimport {\n  StyledFomrLabel,\n  StyledForm,\n  StyledFormInput,\n  StyledSubmitButton,\n} from './ContactForm';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nNotiflix.Notify.init({ position: 'center-top' });\n\nfunction ContactForm() {\n  const [state, setState] = useState({\n    ...initialState,\n  });\n  const { name, number } = state;\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    addNewContact({ ...state });\n    setState({\n      ...initialState,\n    });\n  };\n\n  const addNewContact = ({ name, number }) => {\n    if (checkContactExist(name)) {\n      return Notify.failure(`${name} is already in your contacts`);\n    }\n    Notify.success(`You add contact ${name}`);\n    dispatch(\n      addContact({\n        name,\n        number,\n      })\n    );\n  };\n\n  const checkContactExist = name => {\n    const normalizadName = name.toLowerCase().trim();\n    const foundContact = contacts.find(\n      ({ name }) => name.toLowerCase().trim() === normalizadName\n    );\n    return Boolean(foundContact);\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmitForm}>\n      <StyledFomrLabel htmlFor=\"name\">Name</StyledFomrLabel>\n      <StyledFormInput\n        autoFocus\n        onChange={handleInputChange}\n        value={name}\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        placeholder=\"Enter contact name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adriafn, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <StyledFomrLabel htmlFor=\"number\">Number</StyledFomrLabel>\n      <StyledFormInput\n        onChange={handleInputChange}\n        type=\"tel\"\n        name=\"number\"\n        id=\"number\"\n        value={number}\n        placeholder=\"Enter contact number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <StyledSubmitButton type=\"submit\">Add Contact</StyledSubmitButton>\n    </StyledForm>\n  );\n}\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { StyledInput, StyledLabel } from './StyledFilter';\nimport { selectFilter } from 'redux/filter/filter-selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleFilter = e => dispatch(setFilter(e.target.value));\n\n  return (\n    <>\n      <StyledLabel htmlFor=\"filter\">Find contacts by name</StyledLabel>\n      <StyledInput\n        type=\"text\"\n        id=\"filter\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n        placeholder=\"Enter contact name\"\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsThunks';\nimport {\n  StyledButton,\n  StyledItem,\n  StyledText,\n  StyledTextWrapper,\n} from './StyledContactItem';\nimport { selectLoading } from 'redux/contacts/contacts-selectors';\n\nconst ContactItem = ({ id, name, number }) => {\n  const loading = useSelector(selectLoading);\n  const dispatch = useDispatch();\n  const deleteContactFromList = () => dispatch(deleteContact(id));\n  return (\n    <StyledItem key={id}>\n      <StyledTextWrapper>\n        <StyledText>{name}:</StyledText>\n        <StyledText>{number}</StyledText>\n      </StyledTextWrapper>\n      <StyledButton\n        type=\"button\"\n        disabled={loading}\n        onClick={deleteContactFromList}\n      >\n        Delete\n      </StyledButton>\n    </StyledItem>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  max-height: 500px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport ContactItem from './ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectFilteredContacts,\n} from 'redux/contacts/contacts-selectors';\nimport { StyledList } from './StyledContactList';\n\nconst ContactList = () => {\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <>\n      {contacts.length === 0 && !error ? (\n        <p>You don't hame contact with this name</p>\n      ) : (\n        <StyledList>\n          {contacts.map(({ id, name, number }) => (\n            <ContactItem key={id} name={name} number={number} id={id} />\n          ))}\n        </StyledList>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nContactList.defaultProps = {\n  contacts: [],\n};\n","import styled from 'styled-components';\n\nexport const StyledLoadingWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`;\n","import { Triangle } from 'react-loader-spinner';\nimport { StyledLoadingWrapper } from './Loading';\n\nconst Loader = () => {\n  return (\n    <StyledLoadingWrapper>\n      <Triangle\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"triangle-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n      <p>...Loading</p>\n    </StyledLoadingWrapper>\n  );\n};\n\nexport default Loader;\n","import ContactForm from '../../components/ContactForm/ContactForm.jsx';\nimport Filter from '../../components/Filter/Filter.jsx';\nimport ContactList from '../../components/ContactList/ContactList.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contactsThunks.js';\nimport Loader from '../../components/Loader/Loader.jsx';\nimport {\n  StyledHeader,\n  StyledPhoneBookContainer,\n  StyledSectionContainer,\n  StyledTextNoContacts,\n} from '../../components/StyledApp.js';\nimport { Report } from 'notiflix';\n\nconst ContactsPage = () => {\n  const {\n    contacts: { contacts, loading, error },\n  } = useSelector(state => state);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <StyledPhoneBookContainer>\n      <StyledSectionContainer>\n        <StyledHeader>PhoneBook</StyledHeader>\n        <ContactForm />\n        <StyledHeader>Contacts</StyledHeader>\n        <Filter />\n      </StyledSectionContainer>\n      {error && Report.failure(error)}\n      {loading && contacts.length === 0 ? (\n        <Loader />\n      ) : contacts.length === 0 && !error ? (\n        <StyledTextNoContacts>\n          There are no contacts in your phonebook\n        </StyledTextNoContacts>\n      ) : (\n        <ContactList />\n      )}\n    </StyledPhoneBookContainer>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectFilter","state","filter","selectContacts","contacts","selectLoading","loading","selectError","error","selectFilteredContacts","createSelector","name","toLowerCase","trim","includes","StyledPhoneBookContainer","styled","StyledHeader","StyledSectionContainer","StyledTextNoContacts","StyledItem","StyledTextWrapper","StyledText","StyledButton","StyledLabel","StyledInput","StyledForm","StyledSubmitButton","StyledFormInput","StyledFomrLabel","initialState","number","Notiflix","position","useState","setState","useSelector","dispatch","useDispatch","handleInputChange","e","target","value","prevState","addNewContact","checkContactExist","Notify","addContact","normalizadName","foundContact","find","Boolean","onSubmit","preventDefault","htmlFor","autoFocus","onChange","type","id","placeholder","pattern","title","required","setFilter","disabled","onClick","deleteContact","StyledList","ContactList","length","map","defaultProps","StyledLoadingWrapper","height","width","color","ariaLabel","wrapperStyle","wrapperClassName","visible","useEffect","fetchContacts","Report"],"sourceRoot":""}