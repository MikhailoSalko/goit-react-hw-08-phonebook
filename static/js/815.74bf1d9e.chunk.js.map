{"version":3,"file":"static/js/815.74bf1d9e.chunk.js","mappings":"uRA4EA,EArEqB,WACnB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACX,SAAhBA,EAAOX,KACHC,EAAQU,EAAOC,OACC,UAAhBD,EAAOX,KACPG,EAASQ,EAAOC,OAChBP,EAAYM,EAAOC,MACxB,EAaD,OACE,kBAAMC,SAZiB,SAAAC,GACvBA,EAAEC,iBACFT,GAASU,EAAAA,EAAAA,IAAS,CAAEhB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAC9Ba,SACAC,MAAK,SAAAC,GACJX,EAAS,cACTY,EAAAA,EAAAA,IAAM,qBAAD,OAAsBD,EAAKE,KAAKrB,MACtC,IACHc,EAAEH,OAAOW,OACV,EAGC,WACE,SAACC,EAAA,EAAD,CACEC,SAAUd,EACVe,WAAS,EACTC,UAAQ,EACR1B,KAAK,OACL2B,GAAG,OACHC,MAAM,OACNC,KAAK,OACLC,YAAY,0BACZC,QAAQ,YAEV,SAACR,EAAA,EAAD,CACEC,SAAUd,EACVe,WAAS,EACTC,UAAQ,EACR1B,KAAK,QACL2B,GAAG,QACHC,MAAM,QACNC,KAAK,QACLC,YAAY,2BACZC,QAAQ,YAEV,SAACR,EAAA,EAAD,CACEC,SAAUd,EACVe,WAAS,EACTC,UAAQ,EACR1B,KAAK,WACL2B,GAAG,WACHC,MAAM,WACNC,KAAK,WACLC,YAAY,8BACZC,QAAQ,YAEV,SAACC,EAAA,EAAD,CAAQH,KAAK,SAASE,QAAQ,WAA9B,SAAyC,eAK9C,ECpED,EAJqB,WACnB,OAAO,SAAC,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { Button, TextField } from '@mui/material';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authThunks';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleInputChange = ({ target }) => {\n    target.name === 'name'\n      ? setName(target.value)\n      : target.name === 'email'\n      ? setEmail(target.value)\n      : setPassword(target.value);\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    dispatch(register({ name, email, password }))\n      .unwrap()\n      .then(data => {\n        navigate('/contacts');\n        toast(`You registered as ${data.user.name}`);\n      });\n    e.target.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmitForm}>\n      <TextField\n        onChange={handleInputChange}\n        fullWidth\n        required\n        name=\"name\"\n        id=\"name\"\n        label=\"name\"\n        type=\"text\"\n        placeholder=\"Please, enter your name\"\n        variant=\"filled\"\n      />\n      <TextField\n        onChange={handleInputChange}\n        fullWidth\n        required\n        name=\"email\"\n        id=\"email\"\n        label=\"email\"\n        type=\"email\"\n        placeholder=\"Please, enter your email\"\n        variant=\"filled\"\n      />\n      <TextField\n        onChange={handleInputChange}\n        fullWidth\n        required\n        name=\"password\"\n        id=\"password\"\n        label=\"password\"\n        type=\"password\"\n        placeholder=\"Please, enter your password\"\n        variant=\"filled\"\n      />\n      <Button type=\"submit\" variant=\"outlined\">\n        Register\n      </Button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","navigate","useNavigate","handleInputChange","target","value","onSubmit","e","preventDefault","register","unwrap","then","data","toast","user","reset","TextField","onChange","fullWidth","required","id","label","type","placeholder","variant","Button"],"sourceRoot":""}