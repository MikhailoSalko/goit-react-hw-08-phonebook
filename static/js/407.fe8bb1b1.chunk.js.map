{"version":3,"file":"static/js/407.fe8bb1b1.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/StyledApp.js","components/ContactList/ContactItem/StyledContactItem.js","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/StyledContactList.js","components/ContactList/ContactList.jsx","components/Loader/Loading.js","components/Loader/Loader.jsx","pages/ContactsPage/StyledContactPage.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  width: 500px;\n  margin: 0 auto;\n  margin-bottom: 10px;\n`;\n\nexport const StyledContactForm = styled(StyledForm)`\n  width: 100%;\n  margin: 0;\n`;\n\nexport const StyledInputContainer = styled.div`\n  margin-bottom: 20px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectLoading,\n} from '../../redux/contacts/contacts-selectors';\nimport { addContact } from '../../redux/contacts/contactsThunks';\nimport { StyledContactForm } from './ContactForm';\nimport { toast } from 'react-toastify';\nimport { Button, TextField } from '@mui/material';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nfunction ContactForm() {\n  const [state, setState] = useState({\n    ...initialState,\n  });\n  const { name, number } = state;\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const loading = useSelector(selectLoading);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    addNewContact({ ...state });\n    setState({\n      ...initialState,\n    });\n  };\n\n  const addNewContact = ({ name, number }) => {\n    if (checkContactExist(name)) {\n      return toast.error(`${name} is already in your contacts`);\n    }\n    toast.success(`You add contact ${name}`);\n    dispatch(\n      addContact({\n        name,\n        number,\n      })\n    );\n  };\n\n  const checkContactExist = name => {\n    const normalizadName = name.toLowerCase().trim();\n    const foundContact = contacts.find(\n      ({ name }) => name.toLowerCase().trim() === normalizadName\n    );\n    return Boolean(foundContact);\n  };\n\n  return (\n    <StyledContactForm onSubmit={handleSubmitForm} autoComplete=\"off\">\n      <TextField\n        margin=\"dense\"\n        size=\"normal\"\n        onChange={handleInputChange}\n        fullWidth\n        required\n        name=\"name\"\n        id=\"name\"\n        label=\"name\"\n        type=\"text\"\n        value={name}\n        placeholder=\"Enter contact name\"\n        variant=\"filled\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adriafn, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n      <TextField\n        margin=\"dense\"\n        size=\"normal\"\n        onChange={handleInputChange}\n        fullWidth\n        required\n        value={number}\n        name=\"number\"\n        id=\"number\"\n        label=\"number\"\n        type=\"tel\"\n        placeholder=\"Enter contact number\"\n        variant=\"filled\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        disabled={loading}\n        endIcon={<PersonAddIcon />}\n      >\n        Add contact\n      </Button>\n    </StyledContactForm>\n  );\n}\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { selectFilter } from 'redux/filter/filter-selectors';\nimport { TextField, Typography } from '@mui/material';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleFilter = e => dispatch(setFilter(e.target.value));\n\n  return (\n    <>\n      <Typography variant=\"h6\">Find contacts by name</Typography>\n      <TextField\n        margin=\"dense\"\n        size=\"normal\"\n        onChange={handleFilter}\n        fullWidth\n        required\n        name=\"filter\"\n        id=\"filter\"\n        label=\"filter\"\n        type=\"text\"\n        value={filter}\n        placeholder=\"Enter contact name\"\n        variant=\"filled\"\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const StyledPhoneBookContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  font-size: 40;\n  color: #010101;\n`;\n\nexport const StyledHeader = styled.h2`\n  margin-bottom: 10px;\n  font-size: 40px;\n  color: #4d5951;\n`;\n\nexport const StyledSectionContainer = styled.div`\n  width: 250px;\n`;\n\nexport const StyledTextNoContacts = styled.p`\n  font-size: 20;\n  color: #010101;\n`;\n","import { StyledTextNoContacts } from 'components/StyledApp';\nimport styled from 'styled-components';\n\nexport const StyledItem = styled.li`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const StyledTextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const StyledText = styled(StyledTextNoContacts)`\n  font-size: 20px;\n`;\n\nexport const StyledButton = styled.button`\n  padding: 10px 15px;\n  color: #2a2a2a;\n  background-color: transparent;\n  border-radius: 5px;\n  background-color: rgba(189, 191, 255, 0.5);\n  transition: background-color 300ms ease-in-out, color 300ms ease-in-out,\n    box-shadow 300ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #e3473b;\n    color: #fff;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset,\n      rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsThunks';\nimport { StyledItem, StyledText, StyledTextWrapper } from './StyledContactItem';\nimport { selectLoading } from 'redux/contacts/contacts-selectors';\nimport { Button } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst ContactItem = ({ id, name, number }) => {\n  const loading = useSelector(selectLoading);\n  const dispatch = useDispatch();\n  const deleteContactFromList = () => dispatch(deleteContact(id));\n  return (\n    <StyledItem key={id}>\n      <StyledTextWrapper>\n        <StyledText>{name}:</StyledText>\n        <StyledText>{number}</StyledText>\n      </StyledTextWrapper>\n      <Button\n        type=\"button\"\n        disabled={loading}\n        startIcon={<DeleteIcon />}\n        onClick={deleteContactFromList}\n        variant=\"contained\"\n      >\n        Delete\n      </Button>\n    </StyledItem>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport ContactItem from './ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectFilteredContacts,\n} from 'redux/contacts/contacts-selectors';\nimport { StyledList } from './StyledContactList';\n\nconst ContactList = () => {\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <>\n      {contacts.length === 0 && !error ? (\n        <p>You don't hame contact with this name</p>\n      ) : (\n        <StyledList>\n          {contacts.map(({ id, name, number }) => (\n            <ContactItem key={id} name={name} number={number} id={id} />\n          ))}\n        </StyledList>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nContactList.defaultProps = {\n  contacts: [],\n};\n","import styled from 'styled-components';\n\nexport const StyledLoadingWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`;\n","import { Triangle } from 'react-loader-spinner';\nimport { StyledLoadingWrapper } from './Loading';\n\nconst Loader = () => {\n  return (\n    <StyledLoadingWrapper>\n      <Triangle\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"triangle-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n      <p>...Loading</p>\n    </StyledLoadingWrapper>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  gap: 50px;\n`;\n\nexport const StyledContactFormContainer = styled.div`\n  width: 100%;\n  max-width: 400px;\n`;\n","import ContactForm from '../../components/ContactForm/ContactForm.jsx';\nimport Filter from '../../components/Filter/Filter.jsx';\nimport ContactList from '../../components/ContactList/ContactList.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contactsThunks.js';\nimport Loader from '../../components/Loader/Loader.jsx';\nimport {\n  StyledHeader,\n  StyledTextNoContacts,\n} from '../../components/StyledApp.js';\nimport { Report } from 'notiflix';\nimport {\n  StyledContactFormContainer,\n  StyledContainer,\n} from './StyledContactPage.js';\n\nconst ContactsPage = () => {\n  const {\n    contacts: { contacts, loading, error },\n  } = useSelector(state => state);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <StyledContainer>\n      <StyledContactFormContainer>\n        <StyledHeader>Add Contact</StyledHeader>\n        <ContactForm />\n      </StyledContactFormContainer>\n      <StyledContactFormContainer>\n        <StyledHeader>Contacts</StyledHeader>\n        <Filter />\n        {error && Report.failure(error)}\n        {loading && contacts.length === 0 ? (\n          <Loader />\n        ) : contacts.length === 0 && !error ? (\n          <StyledTextNoContacts>\n            There are no contacts in your phonebook\n          </StyledTextNoContacts>\n        ) : (\n          <ContactList />\n        )}\n      </StyledContactFormContainer>\n    </StyledContainer>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["StyledForm","styled","StyledContactForm","StyledInputContainer","initialState","name","number","useState","state","setState","contacts","useSelector","selectContacts","dispatch","useDispatch","loading","selectLoading","handleInputChange","e","target","value","prevState","addNewContact","checkContactExist","toast","addContact","normalizadName","toLowerCase","trim","foundContact","find","Boolean","onSubmit","preventDefault","autoComplete","TextField","margin","size","onChange","fullWidth","required","id","label","type","placeholder","variant","pattern","title","Button","disabled","endIcon","PersonAdd","filter","selectFilter","Typography","setFilter","StyledHeader","StyledTextNoContacts","StyledItem","StyledTextWrapper","StyledText","startIcon","Delete","onClick","deleteContact","StyledList","ContactList","error","selectError","selectFilteredContacts","length","map","defaultProps","StyledLoadingWrapper","height","width","color","ariaLabel","wrapperStyle","wrapperClassName","visible","StyledContainer","StyledContactFormContainer","useEffect","fetchContacts","Report"],"sourceRoot":""}